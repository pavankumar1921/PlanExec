name: PlanExec actions
on: push
env:
  PG_DATABASE: PlanExec_test
  PG_USER: postgres
  PG_PASSWORD: abcdef

jobs:

  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: abcdef
          POSTGRES_DB: PlanExec_test 
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: cd server && npm install

      - name: Run unit tests
        id: unit-tests
        run: cd server && npm test

      - name: Run the app
        id: run-app
        run: |
          cd server
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5
        
      - name: Run integration tests
        id: integration-tests
        run: |
          cd server
          npm install cypress cypress-json-results
          npx cypress run
  notifications:
    runs-on: ubuntu-latest
    needs: [run-tests]
    if: ${{ always() }}
    steps:
      - name: Get notifications in Slack
        uses: rtCamp/action-slack@v2
        with:
          status: ${{ job.status }}
          text: |
            Workflow *${{ github.workflow }}* has finished running with status *${{ job.status }}*.
            Job: ${{ job.status }}
            Repository: ${{ github.repository }}
            Run ID: ${{ github.run_id }}
            Workflow Run ID: ${{ github.run_id }}
            Logs: ${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
