name: PlanExec actions
on: push
env:
  PG_DATABASE: PlanExec_test
  PG_USER: postgres
  PG_PASSWORD: abcdef

jobs:

  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: abcdef
          POSTGRES_DB: PlanExec_test 
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: cd server && npm install

      - name: Run unit tests
        id: unit-tests
        run: cd server && npm test

      - name: Run the app
        id: run-app
        run: |
          cd server
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5
        
      - name: Run integration tests
        id: integration-tests
        run: |
          cd server
          npm install cypress cypress-json-results
          npx cypress run
  notify:
    runs-on: ubuntu-latest
    needs: [run-tests]
    if: ${{ always() }}
    steps:
      - name: Get notifications in Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          if [[ ${{ github.event.workflow_run.conclusion }} == 'success' ]]; then
            curl -X POST -H 'Content-type: application/json' --data '{"text":"ðŸŽ‰ The automated testing is done successfully.!\nAll tests passed successfully. ðŸš€"}' $SLACK_WEBHOOK
          else
            curl -X POST -H 'Content-type: application/json' --data '{"text":"ðŸ˜ž The automated testing failed.\nPlease review the logs for more information: https://github.com/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}"}' $SLACK_WEBHOOK
          fi
        
